{
    "openapi":"3.0.2",
    "info": {
        "title":"Guidap marketplace api docs",
        "contact": {
            "email": "abbesdjilali@live.fr",
            "name": "Djilali"
        },
        "version":"1.0"
    },
    "servers": [
        {"url":"http://localhost:3000"}
    ],
    "components": {
        "schemas": {
            "UserRequestBody":  {
                "type": "object",
                "properties": {
                    "userName": { "type": "string", "minLength": 3, "maxLength": 25 },
                    "email": { "type": "string", "format": "email" },
                    "password": { "type": "string", "minLength": 8, "maxLength": 255 },
                    "passwordConfirmation": { "title": "Confirm password" }
                },
                "required": [ "userName","email", "password", "passwordConfirmation" ],
                "additionalProperties": false
            },
            "User": {
                "type":"object",
                "properties": {
                    "userName": {
                        "type": "string",
                        "example":"Djilali"
                    },
                    "email":{
                        "type": "string",
                        "example":"djilali@guidap.co"
                    },
                    "password":{
                        "type": "string",
                        "description": "Password to login"
                    },
                    "passwordConfirmation":{
                        "type": "string",
                        "description": "confirmation of the Password"
                    }
                }
            },
            "RegisterResponse":{
                "properties": {
                    "id":{
                        "type": "integer",
                        "example":25
                    },
                    "userName": {
                        "type": "string",
                        "example":"Djilali"
                    },
                    "email":{
                        "type": "string",
                        "example":"djilali@guidap.co"
                    }
                }
            },
            "NotFound":{
                "properties": {
                    "status":{
                        "type": "integer",
                        "example":404
                    },
                    "message":{
                        "type": "string",
                        "example":"NOT FOUND"
                    }
                }
            },
            "BadRequest":{
                "properties": {
                    "status":{
                        "type": "integer",
                        "example":400
                    },
                    "message":{
                        "type": "string",
                        "example":"NO DATA WITH THIS ID"
                    }
                }
            },
            "SuccesResponse":{
                "type": "object",
                "properties": {
                    "status":{
                        "type": "integer",
                        "example":200
                    },
                    "message":{
                        "type": "string",
                        "example":"UPDATED Successfully"
                    }
                }
            },
            "LeisureCentreUpdate": {
                "type": "object",
                "properties": {
                    "centreName": { "type": "string", "minLength": 3, "maxLength": 255 },
                    "description": { "type": "string" },
                    "website": { "type": "string" },
                    "addressName": { "type": "string", "minLength": 6, "maxLength": 255,"example":"2 rue de la république " },
                    "cite": { "type": "string", "minLength": 4, "maxLength": 25,"example":"Toulouse" },
                    "zipCode": { "type": "number","example":31000},
                    "country": { "type": "string" },
                    "categories": { 
                        "type": "array",
                        "example":"[1,5,8]",
                        "items": {
                            "type": "integer",
                            "example":1
                        },
                        "minItems": 1 
                    }
                },
                "additionalProperties": false
            },            
            "LeisureCentreRequestBody": {
                "type": "object",
                "properties": {
                    "centreName": { "type": "string", "minLength": 3, "maxLength": 255 },
                    "description": { "type": "string" },
                    "website": { "type": "string" },
                    "addressName": { "type": "string", "minLength": 6, "maxLength": 255,"example":"2 rue de la république " },
                    "cite": { "type": "string", "minLength": 4, "maxLength": 25,"example":"Toulouse" },
                    "zipCode": { "type": "number","example":31000},
                    "country": { "type": "string" },
                    "categories": { 
                        "type": "array",
                        "example":"[1,5,8]",
                        "items": {
                            "type": "integer",
                            "example":1
                        },
                        "minItems": 1 
                    }
                },
                "required": [
                    "centreName",
                    "addressName",
                    "cite",
                    "zipCode",
                    "country",
                    "categories"
                ],
                "additionalProperties": false
            },
            "Weather":{
                "type": "object",
                "properties": {
                    "dt": {
                        "type": "number",
                        "example":1614513600
                    },
                    "pop":{
                        "type":"number",
                        "example":0.07
                    }, 
                    "uvi": {
                        "type": "number",
                        "example":2.94
                    },
                    "temp": {
                        "type": "object",
                        "properties": {
                            "day":{
                                "type": "number",
                                "example": 286.9
                            },
                            "eve":{
                                "type": "number",
                                "example": 286.9
                            },
                            "max": {
                                "type": "number",
                                "example": 286.9
                            },
                            "min":{
                                "type": "number",
                                "example": 286.9
                            },
                            "morn": {
                                "type": "number",
                                "example": 286.9
                            },
                            "night":{
                                "type": "number",
                                "example": 286.9
                            }
                        }
                    },
                    "clouds": {
                        "type": "number",
                        "example": 20
                     },
                    "sunset": {
                        "type": "number",
                        "example": 286.9
                    },
                    "sunrise": {
                        "type": "number",
                        "example": 286.9
                    },
                    "weather":{
                        "type":"array",
                        "items":{
                            "type": "object",
                            "properties": {
                                "id":{
                                    "type": "number",
                                    "example": 286.9
                                },
                                "icon":{
                                    "type": "string",
                                    "example": "04d"
                                },
                                "main":{
                                    "type": "string",
                                    "example":"Clouds"
                                },
                                "description":{
                                    "type": "string",
                                    "example":"broken clouds"
                                }
                            }
                        }
                    }, 
                    "humidity":{
                        "type": "number",
                        "example": 61
                    },
                    "pressure":{
                        "type": "number",
                        "example": 1025
                    },
                    "wind_deg":{
                        "type": "number",
                        "example": 116
                    },
                    "dew_point":{
                        "type": "number",
                        "example": 279.72
                    },
                    "feels_like":{
                        "type":"object",
                        "properties": {
                            "day": {
                                "type": "number",
                                "example": 280.3
                            },
                            "eve":{
                                "type": "number",
                                "example": 277.9
                            },
                            "morn": {
                                "type": "number",
                                "example": 275.34
                            },
                            "night": {
                                "type": "number",
                                "example": 276.94
                            }
                        }
                    }, 
                    "wind_speed": {
                        "type": "number",
                        "example": 8.23
                    }
                

            
                }
            },
            "Category":{
                "type": "object",
                "properties": {
                    "id":{
                        "type": "integer",
                        "example":2
                    },
                    "name":{
                        "type": "string",
                        "example":"kitesurf"
                    }
                }

            },
            "LeisureCentreResponse": {
            "type":"object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "centreName":{
                    "type":"string",
                    "description":"Le nom de la base de loisirs",
                    "example":"Base de loisirs la ramée"
                },
                "description":{
                    "type":"string",
                    "description": "la description de la base de loisirs"
                },
                "website":{
                    "type":"string",
                    "description":"Le lien de site web de la base de loisirs"
                },
                "addressName":{
                    "type":"string",
                    "description":"L'adresse de la base de loisirs",
                    "example":"2 Avenue des nobles"
                },
                "zipCode":{
                    "type": "number",
                    "description": "Le code postal de la base de loisirs",
                    "example":"31000"
                },
                "city":{
                    "type":"string",
                    "description":"La ville ou se trouve la base de loisirs",
                    "example":"Toulouse"
                },
                "country":{
                    "type":"string",
                    "description":"Le pays ou se trouve la base de loisirs",
                    "example":"2 Avenue des nobles"
                },
                "lat":{
                    "type":"number",
                    "description":"La latitude",
                    "example":"43.615282"
                },
                "lon":{
                    "type":"number",
                    "description":"Longitude",
                    "example":"1.472258"
                },"fullAddress":{
                    "type":"string",
                    "description":"L'adresse complete de la base de loisirs",
                    "example":"2 Avenue des nobles,31000,Toulouse,France."
                },"categories":{
                    "type": "array",
                    "items":{
                        "$ref":"#components/schemas/Category"
                    }
                },"weather":{
                    "type": "object",
                    "$ref":"#/components/schemas/Weather"
                    
                }
            }
        }
        },
        "securitySchemes": {
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "paths": {
        "/user/login": {
            "post": {
                "description": "Sign in guidap marketplace API",
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "properties": {
                                    "email":{"type": "string","format": "email","example":"djilali@guidap.co"},
                                    "password":{"type": "string","minLength": 8, "maxLength": 255 }
                                },
                                "required": ["email","password"]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                        "application/json":{
                            "schema":{
                                "additionalProperties": false,
                                "properties":{
                                    "status": {"type":"integer","example":200},
                                    "user": {
                                        "type": "object",
                                        "properties": {
                                            "id": {"type": "integer","example":4},
                                            "userName":{"type": "string","example":"djilal"},
                                            "email":{"type": "string","format": "email","example":"djilali@guidap.co"}
                                        }
                                    },
                                    "accessToken":{"type": "string","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwidXNlck5hbWUiOiJkamlsYWwiLCJlbWFpbCI6ImRqaWxhQGd1aWRhcC5jbyIsImlhdCI6MTYxNDUxODAxM30.jjpvFOl5D7-5k1lzOmBqFut6oDjeujFcpgZmo_167gY"}
                                }
                            }
                        }
                    }
                    },
                    "400":{
                        "description": "Bad request",
                        "content": {
                            "application/json":{
                              "schema":{
                                  "$ref":"#/components/schemas/BadRequest"
                              }  
                            }
                        }
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "description": "Register a new user",
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/RegisterResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "BAD REQUEST",
                        "content": {
                            "application/json":{
                                "schema":{
                                   "$ref":"#/components/schemas/BadRequest"
                                }                                
                            }
                        }
                    }
                }
            }
        },        
        "/api/categories": {
            "post": {
                "security": [{
                    "jwtAuth":[]
                }],
                "description":"Create a new category",
                "requestBody":{
                    "content":{
                        "application/json":{
                            "schema":{
                                "properties": {
                                    "name":{
                                    "type":"string",
                                        "example":"kitesurf"
                                    }
                                }
                            }

                        }

                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json":{
                                "schema":{
                                    "properties": {
                                        "id":{
                                            "type": "integer",
                                            "example":1
                                        }
                                    }
                                }
                            }
                        },
                        "description": "OK"
                    }
                }
            },
            "get": {
                "description": "GET ALL CATEGORIES",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "items":{
                                        "$ref":"#/components/schemas/Category"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories/{id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Id of category to update or delete",
                    "schema":{
                        "type": "integer",
                        "example":"4"
                    }
                }
            ],  
            "put": {
                "security": [{
                    "jwtAuth":[]
                }],
                "description":"UPDATE ONE CATEGORY",
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "properties": {
                                    "name":{
                                        "type": "string",
                                        "example":"paddle"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json":{
                                "schema":{
                                   "$ref":"#/components/schemas/SuccesResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "",
                        "content": {
                            "application/json":{
                                "schema":{
                                   "$ref":"#/components/schemas/BadRequest"
                                }                                
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [{
                    "jwtAuth":[]
                }],
                "description":"DELETE ONE CATEGORY",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/SuccesResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/BadRequest"
                                }                                
                            }
                        }
                    },
                    "404":{
                        "description": "Error to delete category",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/NotFound"
                                }                                
                            }
                        }
                    }
                }
            }
            
        },   
        "/api/leisurecentre": {
            "post": {
                "security": [{
                    "jwtAuth":[]
                }],
                "description":"CREATE A NEW LEISURE CENTRE",
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/LeisureCentreRequestBody"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "get": {
                "description": "GET ALL LEISURE CENTRE",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "number fo page",
                        "required": false,
                        "schema":{
                            "type": "number",
                            "example":"2"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of leisure centre per page",
                        "required": false,
                        "schema":{
                            "type": "number",
                            "example":"2"
                        } 
                    },
                    {
                        "name": "categories",
                        "in": "query",
                        "description": "Multiple categories name can be provided with comma separated strings",
                        "required": false,
                        "schema":{
                            "type": "string",
                            "description": "Name of category",
                            "example":"kitesurf,paddle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "type": "array",
                                    "items":{
                                       "$ref":"#components/schemas/LeisureCentre"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/leisurecentre/{id}": {
            "parameters": [
                {
                    "in": "path",
                    "name": "id",
                    "required": true,
                    "description": "Id of leisure centre to update",
                    "schema":{
                        "type": "integer",
                        "example":"2"
                    }
                }
            ],            
            "delete": {
                "security": [{
                    "jwtAuth":[]
                }],
                "description":"DELETE ONE LEISURE CENTRE",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json":{
                                "schema":{
                                  "$ref":"#/components/schemas/SuccesResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "Error to delete leisure centre",
                        "content": {
                            "application/json":{
                                "schema":{
                                   "$ref":"#/components/schemas/BadRequest"
                                }                                
                            }
                        }
                    },
                    "404":{
                        "description": "Error to delete leisure centre",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/NotFound"
                                }                                
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [{
                    "jwtAuth":[]
                }],
                "description":"",
                "requestBody":{
                    "content": {
                        "application/json":{
                            "schema":{
                                "$ref":"#/components/schemas/LeisureCentreUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/SuccesResponse"
                                }
                            }
                        }
                    },
                    "400":{
                        "description": "",
                        "content": {
                            "application/json":{
                                "schema":{
                                    "$ref":"#/components/schemas/BadRequest"
                                }                                
                            }
                        }
                    }
                }
            }


    }
}}